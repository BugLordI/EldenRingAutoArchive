<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
		Microsoft ResX Schema

		Version 1.3

		The primary goals of this format is to allow a simple XML format 
		that is mostly human readable. The generation and parsing of the 
		various data types are done through the TypeConverter classes 
		associated with the data types.

		Example:

		... ado.net/XML headers & schema ...
		<resheader name="resmimetype">text/microsoft-resx</resheader>
		<resheader name="version">1.3</resheader>
		<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
		<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
		<data name="Name1">this is my long string</data>
		<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
		<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
			[base64 mime encoded serialized .NET Framework object]
		</data>
		<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
			[base64 mime encoded string representing a byte array form of the .NET Framework object]
		</data>

		There are any number of "resheader" rows that contain simple 
		name/value pairs.

		Each data row contains a name, and value. The row also contains a 
		type or mimetype. Type corresponds to a .NET class that support 
		text/value conversion through the TypeConverter architecture. 
		Classes that don't support this are serialized and stored with the 
		mimetype set.

		The mimetype is used for serialized objects, and tells the 
		ResXResourceReader how to depersist the object. This is currently not 
		extensible. For a given mimetype the value must be set accordingly:

		Note - application/x-microsoft.net.object.binary.base64 is the format 
		that the ResXResourceWriter will generate, however the reader can 
		read any of the formats listed below.

		mimetype: application/x-microsoft.net.object.binary.base64
		value   : The object must be serialized with 
			: System.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.soap.base64
		value   : The object must be serialized with 
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.bytearray.base64
		value   : The object must be serialized into a byte array 
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Tip" xml:space="preserve">
    <value>提示</value>
  </data>
  <data name="LaunchFailed" xml:space="preserve">
    <value>启动失败，应用已经启动！</value>
  </data>
  <data name="MainFormTitle" xml:space="preserve">
    <value>存档自动备份</value>
  </data>
  <data name="TitleBarDefaultName" xml:space="preserve">
    <value>标题栏</value>
  </data>
  <data name="CloseAppConfirmation" xml:space="preserve">
    <value>是否确认退出程序？</value>
  </data>
  <data name="MaximizeBtnName" xml:space="preserve">
    <value>最大化</value>
  </data>
  <data name="MinimizeBtnName" xml:space="preserve">
    <value>最小化</value>
  </data>
  <data name="RestoreBtnName" xml:space="preserve">
    <value>还原</value>
  </data>
  <data name="CloseBtnName" xml:space="preserve">
    <value>关闭</value>
  </data>
  <data name="OpenSelected" xml:space="preserve">
    <value>打开选择</value>
  </data>
  <data name="StartProgramTogether" xml:space="preserve">
    <value>并启动程序</value>
  </data>
  <data name="Morning" xml:space="preserve">
    <value>上午好！</value>
  </data>
  <data name="Noon" xml:space="preserve">
    <value>中午好！</value>
  </data>
  <data name="Afternoon" xml:space="preserve">
    <value>下午好！</value>
  </data>
  <data name="Evening" xml:space="preserve">
    <value>晚上好！</value>
  </data>
  <data name="Setting" xml:space="preserve">
    <value>设置</value>
  </data>
  <data name="About" xml:space="preserve">
    <value>关于</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>首页</value>
  </data>
  <data name="ListOfSupported" xml:space="preserve">
    <value>已支持的列表：</value>
  </data>
  <data name="ClickToAddNewGame" xml:space="preserve">
    <value>点击添加新的游戏</value>
  </data>
  <data name="NewProject" xml:space="preserve">
    <value>新建</value>
  </data>
  <data name="GameName" xml:space="preserve">
    <value>游戏名称:</value>
  </data>
  <data name="GameInstallPath" xml:space="preserve">
    <value>游戏路径:</value>
  </data>
  <data name="GameArchivePath" xml:space="preserve">
    <value>存档路径:</value>
  </data>
  <data name="GameBackupPath" xml:space="preserve">
    <value>备份路径:</value>
  </data>
  <data name="ChooseGamePath" xml:space="preserve">
    <value>选择游戏路径</value>
  </data>
  <data name="ChooseArchivePath" xml:space="preserve">
    <value>选择存档路径</value>
  </data>
  <data name="ChooseBackupPath" xml:space="preserve">
    <value>选择备份路径</value>
  </data>
  <data name="SaveProject" xml:space="preserve">
    <value>保存</value>
  </data>
  <data name="DataSavedSuccess" xml:space="preserve">
    <value>数据保存成功</value>
  </data>
  <data name="ProjectNameCannotEmpty" xml:space="preserve">
    <value>名称不能为空</value>
  </data>
  <data name="ProjectInstallPathCannotEmpty" xml:space="preserve">
    <value>安装路径不能为空</value>
  </data>
  <data name="ChooseDataSourcePath" xml:space="preserve">
    <value>请选择数据源(存档)路径</value>
  </data>
  <data name="ChooseBackupSavePath" xml:space="preserve">
    <value>请选择备份路径</value>
  </data>
  <data name="IsRunning" xml:space="preserve">
    <value>正在运行</value>
  </data>
  <data name="OpenProgramPath" xml:space="preserve">
    <value>打开安装路径</value>
  </data>
  <data name="OpenArchivePath" xml:space="preserve">
    <value>打开存档路径</value>
  </data>
  <data name="OpenBackupPath" xml:space="preserve">
    <value>打开备份路径</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>删除</value>
  </data>
</root>